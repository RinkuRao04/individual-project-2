name: CD Pipeline
on:
  push:
    branches:
       - master
       
jobs:
  deploy:
    name: Deploy to staging
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}

      - name: SSH to AWS and Pull Docker Images
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_SSH_HOST }}
          username: ${{ secrets.STAGING_SSH_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            # Ensure Docker is installed (if needed)
            # sudo apt-get update
            # sudo apt-get install -y docker.io
    
            # Start Docker service (if needed)
            # sudo systemctl start docker
            # sudo systemctl enable docker
    
            # Pull Docker images from Docker Hub
            sudo docker pull rinkukunwarrao/project_frontend:latest
            sudo docker pull rinkukunwarrao/project_backend:latest
    
            # List Docker images to verify
            sudo docker images

      - name: Docker Compose Up
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "/home/runner/work/individual-project-2/individual-project-2"
         
          script: | 
            sudo docker compose -f docker-compose.yml down   # Ensure no old containers are running
            sudo docker compose -f docker-compose.yml pull  # Pull the latest images
            sudo docker compose  -f docker-compose.yml up -d  # Start containers in detached mode

      - name: Slack Notification
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env: 
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_T }}
          SLACK_CHANNEL: '#testing'
          SLACK_COLOR: '#3339ff'
          SLACK_MESSAGE: ' The build and deployment process has been completed .'
             
