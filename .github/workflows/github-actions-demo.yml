name: Build Docker Image
on:
  push:
    branches:
      - master
jobs:
    build:
      name: push docker image to docker hub
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: login to docker hub
          id: docker-hub
          env:
            username: ${{secrets.DOCKERHUB_USERNAME}}
            password: ${{secrets.DOCKERHUB_PASSWORD}}
            
            
          run: |
            docker login -u $username -p $password 
        - name: build the docker image
          id: build-docker-image
          run: |
            ls -la 
            docker build . -t rinkukunwarrao/demo-image-test:latest
        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: 'rinkukunwarrao/demo-image-test:latest'
            # exit-code: '1'
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH'


        # - name: Slack Notification - Starting
        #   uses: act10ns/slack@v1
        #   with:
        #     status: starting
        #     token: ${{ secrets.SLACK_TOKEN }}
        #     channel: ${{ secrets.SLACK_CHANNEL }}
        #     message: 'Starting Build and Deploy...'
        #   if: always()
         

       

        # - name: Slack Notification
        #   uses: act10ns/slack@v1
        #   with: 
        #     status: starting
        #     webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        #     channel: '#Anjali Soni'
        #     message: 'Starting Build and Deploy...'
        #   if: always()   
        - name: Send Slack Notification
          if: failure()
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_CHANNEL: 'Vaibhavraj Nath Chauhan'
            SLACK_COLOR: '#ff0000'
            SLACK_MESSAGE: 'Trivy scan failed. The build and deployment process has been halted again.'
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_V }}
          
        - name: push the docker image
          id: push-docker-image
          run: docker push rinkukunwarrao/demo-image-test:latest

         # - name: Deploy to Remote Server
         #   env:
         #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
         #     HOST: ${{ secrets.REMOTE_HOST }}
         #     USER: ${{ secrets.REMOTE_USER }}
         #   run: |
         #     echo "$SSH_PRIVATE_KEY" > private_key.pem
         #     chmod 600 private_key.pem
         #     scp -i private_key.pem -o StrictHostKeyChecking=no docker-compose.yml $USER@$HOST:/path/to/deployment
         #     ssh -i private_key.pem -o StrictHostKeyChecking=no $USER@$HOST 'docker-compose -f /path/to/deployment/docker-compose.yml up -d'
        # - name: Run docker-compose
        #   uses: hoverkraft-tech/compose-action@v2.0.1
        #   with:
        #     compose-file: "."
  
        - name: Execute tests in the running services
          run: |
              docker-compose up -d
      # docker-compose exec test-app pytest
